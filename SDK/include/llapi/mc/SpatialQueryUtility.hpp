// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class SpatialQueryUtility {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SPATIALQUERYUTILITY
public:
    class SpatialQueryUtility& operator=(class SpatialQueryUtility const &) = delete;
    SpatialQueryUtility(class SpatialQueryUtility const &) = delete;
    SpatialQueryUtility() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SPATIALQUERYUTILITY
#endif
    MCAPI static void forEachBlockInAABB(class IConstBlockSource const &, class AABB const &, class std::function<void (class Block const &, class BlockPos const &)> const &);
    MCAPI static void testForCollidableMobs(class StrictEntityContext const &, struct SpatialEntityFetcherComponent const &, class AABB const &, class AABB const &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<class FlagComponent<struct CollidableMobFlag>>, struct AABBShapeComponent const>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<class FlagComponent<struct FallingBlockFlag>>>, std::vector<class AABB> &);
    MCAPI static void testForEntityStacking(class StrictEntityContext const &, struct SpatialEntityFetcherComponent const &, class AABB const &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct AABBShapeComponent const, struct SynchedActorDataComponent const>, std::vector<class AABB> &);

};