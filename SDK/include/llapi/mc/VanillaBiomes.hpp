// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class VanillaBiomes {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_VANILLABIOMES
public:
    class VanillaBiomes& operator=(class VanillaBiomes const &) = delete;
    VanillaBiomes(class VanillaBiomes const &) = delete;
    VanillaBiomes() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_VANILLABIOMES
#endif
    MCAPI static class mce::Color const SWAMP_WATER_COLOR;
    MCAPI static class mce::Color const WATER_FOG_COLOR_SWAMP;
    MCAPI static void initBiomeComponents(class BiomeComponentFactory &);
    MCAPI static void initBiomeDimensionComponent(class BiomeRegistry &);
    MCAPI static void initBiomes(class BiomeRegistry &, struct SpawnSettings const &, class BaseGameVersion const &, class Experiments const &);
    MCAPI static void initClientOnlyComponents(class BiomeRegistry &);
    MCAPI static void initDefaultWorldGenComponents(class IWorldRegistriesProvider &);
    MCAPI static void initSurfaceBuilders(class SurfaceBuilderRegistry &, class BaseGameVersion const &);
    MCAPI static void initVanillaBiomeTypeComponent(class BiomeRegistry &);
    MCAPI static class std::set<int, struct std::less<int>, class std::allocator<int>> mPlayerValidSpawns;
    MCAPI static void shutdownBiomes();

//private:
    MCAPI static void addBiomeDimensionAttributeComponentHelper(class BiomeRegistry &, class HashedString const &, class AutomaticID<class Dimension, int>);

private:

};