// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockLegacy.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class DiodeBlock : public BlockLegacy {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DIODEBLOCK
public:
    class DiodeBlock& operator=(class DiodeBlock const &) = delete;
    DiodeBlock(class DiodeBlock const &) = delete;
    DiodeBlock() = delete;
#endif

public:
    /*0*/ virtual ~DiodeBlock();
    /*19*/ virtual void __unk_vfn_19();
    /*29*/ virtual void __unk_vfn_29();
    /*30*/ virtual void __unk_vfn_30();
    /*32*/ virtual void __unk_vfn_32();
    /*33*/ virtual void __unk_vfn_33();
    /*34*/ virtual void __unk_vfn_34();
    /*36*/ virtual void __unk_vfn_36();
    /*37*/ virtual void __unk_vfn_37();
    /*38*/ virtual void __unk_vfn_38();
    /*39*/ virtual void __unk_vfn_39();
    /*40*/ virtual void __unk_vfn_40();
    /*41*/ virtual void __unk_vfn_41();
    /*42*/ virtual void __unk_vfn_42();
    /*44*/ virtual void __unk_vfn_44();
    /*45*/ virtual void __unk_vfn_45();
    /*46*/ virtual void __unk_vfn_46();
    /*47*/ virtual void __unk_vfn_47();
    /*48*/ virtual void __unk_vfn_48();
    /*49*/ virtual void __unk_vfn_49();
    /*51*/ virtual bool isSignalSource() const;
    /*54*/ virtual void __unk_vfn_54();
    /*59*/ virtual int getDirectSignal(class BlockSource &, class BlockPos const &, int) const;
    /*60*/ virtual void __unk_vfn_60();
    /*61*/ virtual void __unk_vfn_61();
    /*73*/ virtual void onRedstoneUpdate(class BlockSource &, class BlockPos const &, int, bool) const;
    /*75*/ virtual void __unk_vfn_75();
    /*82*/ virtual void __unk_vfn_82();
    /*92*/ virtual bool mayPlace(class BlockSource &, class BlockPos const &) const;
    /*100*/ virtual void neighborChanged(class BlockSource &, class BlockPos const &, class BlockPos const &) const;
    /*105*/ virtual void __unk_vfn_105();
    /*106*/ virtual class Block const & getPlacementBlock(class Actor &, class BlockPos const &, unsigned char, class Vec3 const &, int) const;
    /*123*/ virtual void __unk_vfn_123();
    /*125*/ virtual void __unk_vfn_125();
    /*126*/ virtual void __unk_vfn_126();
    /*131*/ virtual void __unk_vfn_131();
    /*146*/ virtual int getVariant(class Block const &) const;
    /*147*/ virtual bool canSpawnOn(class Actor *) const;
    /*156*/ virtual void __unk_vfn_156();
    /*167*/ virtual void __unk_vfn_167();
    /*168*/ virtual void __unk_vfn_168();
    /*169*/ virtual void __unk_vfn_169();
    /*176*/ virtual void __unk_vfn_176();
    /*179*/ virtual bool canSurvive(class BlockSource &, class BlockPos const &) const;
    /*187*/ virtual void __unk_vfn_187();
    /*193*/ virtual int getSignal(class BlockSource &, class BlockPos const &, int) const;
    /*194*/ virtual bool isLocked(class BlockSource &, class BlockPos const &) const;
    /*195*/ virtual bool isSameDiode(class Block const &) const;
    /*196*/ virtual bool shouldPrioritize(class BlockSource &, class BlockPos const &) const;
    /*197*/ virtual bool isOn() const;
    /*198*/ virtual bool shouldTurnOn(class BlockSource &, class BlockPos const &) const;
    /*199*/ virtual int getInputSignal(class BlockSource &, class BlockPos const &) const;
    /*200*/ virtual bool isAlternateInput(class Block const &) const;
    /*201*/ virtual int getAlternateSignal(class BlockSource &, class BlockPos const &) const;
    /*202*/ virtual int getOutputSignal(class Block const &) const;
    /*203*/ virtual int getTurnOffDelay(class Block const &) const;
    /*204*/ virtual int getTurnOnDelay(class Block const &) const = 0;
    /*205*/ virtual class Block const * getOnBlock(class Block const *) const = 0;
    /*206*/ virtual class Block const * getOffBlock(class Block const *) const = 0;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DIODEBLOCK
#endif
    MCAPI DiodeBlock(std::string const &, int, bool);
    MCAPI static bool isDiode(class Block const &);

//protected:
    MCAPI int getAlternateSignalAt(class BlockSource &, class BlockPos const &, int) const;

protected:

};