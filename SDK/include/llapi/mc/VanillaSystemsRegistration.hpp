// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Bedrock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

namespace VanillaSystemsRegistration {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
    MCAPI void _registerSideBySideCompare(std::vector<unsigned int> const &, class EntitySystems &, enum SideBySideExtractionId, struct VanillaSystemsRegistration::RegistrationOptions const &);
    MCAPI void registerActorMoveSystems(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool, enum VanillaSystemsRegistration::ExtractApplyMode);
    MCAPI void registerActorNormalTick(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool);
    MCAPI void registerActorPositionPassenger(class IEntitySystems &, bool, bool);
    MCAPI void registerEnterMoveSystems(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool);
    MCAPI void registerExtractApplyBlock(struct VanillaSystemsRegistration::DependencyInfo &, enum VanillaSystemsRegistration::ExtractApplyMode, enum SideBySideExtractionId, class EntitySystems &, struct VanillaSystemsRegistration::RegistrationOptions const &, class std::function<void (class IEntitySystems &)> const &);
    MCAPI void registerPassengerTick(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool);
    MCAPI void registerPlayerAIStep(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool);
    MCAPI void registerPlayerPreNormalTickSystems(struct VanillaSystemsRegistration::DependencyInfo &, class EntitySystems &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool);
    MCAPI void registerPostAiStepSystems(class EntitySystems &, bool, struct VanillaSystemsRegistration::RegistrationOptions const &);
    MCAPI void registerPostNormalTickSystems(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &, bool);
    MCAPI void registerPreNormalTickSystems(class EntitySystems &, struct VanillaSystemsRegistration::DependencyInfo &, struct VanillaSystemsRegistration::RegistrationOptions const &);
    MCAPI void registerRemovePassengerSystems(class IEntitySystems &, bool);
    MCAPI void registerSetPosSystems(class IEntitySystems &, bool);
    MCAPI void registerSharedVanillaPlayerInteractionSystems(class EntitySystems &);
    MCAPI void registerTickFilterSystems(class EntitySystems &);
    MCAPI void registerVanillaServerTickingSystems(class EntitySystems &, class gsl::not_null<class Bedrock::NonOwnerPointer<class ILevel const>>, struct VanillaSystemsRegistration::RegistrationOptions const &);

};