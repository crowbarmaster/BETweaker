// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class SynchedActorDataEntityWrapper {

#define AFTER_EXTRA
#define DISABLE_CONSTRUCTOR_PREVENTION_SYNCHEDACTORDATAENTITYWRAPPER
#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SYNCHEDACTORDATAENTITYWRAPPER
public:
    class SynchedActorDataEntityWrapper& operator=(class SynchedActorDataEntityWrapper const &) = delete;
    SynchedActorDataEntityWrapper(class SynchedActorDataEntityWrapper const &) = delete;
    SynchedActorDataEntityWrapper() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SYNCHEDACTORDATAENTITYWRAPPER
#endif
    MCAPI SynchedActorDataEntityWrapper(class EntityContext &);
    MCAPI class CompoundTag const & getCompoundTag(unsigned short) const;
    MCAPI float getFloat(unsigned short) const;
    MCAPI int getInt(unsigned short) const;
    MCAPI __int64 getInt64(unsigned short) const;
    MCAPI signed char getInt8(unsigned short) const;
    MCAPI class BlockPos getPosition(unsigned short) const;
    MCAPI short getShort(unsigned short) const;
    MCAPI bool getStatusFlag(enum ActorFlags) const;
    MCAPI std::string const & getString(unsigned short) const;
    MCAPI class Vec3 getVec3(unsigned short) const;
    MCAPI bool hasData(unsigned short) const;
    MCAPI bool isDirty() const;
    MCAPI void markDirty(unsigned short);
    MCAPI std::vector<std::unique_ptr<class DataItem>> packAll() const;
    MCAPI std::vector<std::unique_ptr<class DataItem>> packDirty();
    MCAPI class SynchedActorDataReader reader() const;
    MCAPI void setStatusFlag(enum ActorFlags, bool);
    MCAPI class SynchedActorDataWriter writer();
    MCAPI ~SynchedActorDataEntityWrapper();

//private:
    MCAPI class gsl::not_null<class SynchedActorData *> _get();
    MCAPI class gsl::not_null<class SynchedActorData const *> _get() const;

private:

};