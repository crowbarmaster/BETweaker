// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "RakNetInstance.hpp"
#include "RakPeerHelper.hpp"
#include "Bedrock.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class TransportInterfaceComposite {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TRANSPORTINTERFACECOMPOSITE
public:
    class TransportInterfaceComposite& operator=(class TransportInterfaceComposite const &) = delete;
    TransportInterfaceComposite(class TransportInterfaceComposite const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_TRANSPORTINTERFACECOMPOSITE
#endif
    MCAPI TransportInterfaceComposite();
    MCAPI void disable();
    MCAPI class std::shared_ptr<class TransportInterface> getActiveInstance() const;
    MCAPI class std::shared_ptr<struct NetherNetInstance> getNetherNetInstance(enum TransportLayer);
    MCAPI class std::shared_ptr<class RakNetInstance> getRakNetInstance();
    MCAPI bool hasNetherNetInstance(enum TransportLayer);
    MCAPI void initializeRakNetInstance(struct RakNetInstance::ConnectionCallbacks &, class RakPeerHelper::IPSupportInterface &, class Bedrock::NonOwnerPointer<class AppPlatform> const &);
    MCAPI void setActiveTransportLayer(enum TransportLayer);
    MCAPI void tryEnable();
    MCAPI void update();
    MCAPI ~TransportInterfaceComposite();

};