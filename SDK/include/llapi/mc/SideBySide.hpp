// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "SideBySideTrigger.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

namespace SideBySide {

#define AFTER_EXTRA

#undef AFTER_EXTRA
    MCAPI extern enum SideBySideTrigger::GlobalMode GLOBAL_MODE;
    MCAPI void _collectVehiclesAndPassengersNotInView(class StrictEntityContext const &, struct SideBySideValidationExceptionComponent const &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<struct UsesSideBySideComparisonComponent, struct SideBySideExceptionVisitedFlagComponent>> const &, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct PassengerComponent const>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct VehicleComponent const>, std::vector<struct std::pair<class StrictEntityContext, struct SideBySideValidationExceptionComponent>> &);
    MCAPI void _tryAddFailureComponent(class StrictEntityContext const &, class EntityModifierT<class EntityRegistryBase, class StrictEntityContext, struct SideBySideValidationFailureComponent> &, struct SideBySideValidationFailure const &);
    MCAPI struct SideBySidePartialComparison combineComparison(struct SideBySidePartialComparison const &, struct SideBySidePartialComparison const &);
    MCAPI void tickExceptions(class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<struct UsesSideBySideComparisonComponent>, struct SideBySideValidationExceptionComponent const>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct Include<struct UsesSideBySideComparisonComponent, struct SideBySideExceptionVisitedFlagComponent>>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SideBySideCopyComponent>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct PassengerComponent const>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct VehicleComponent const>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SideBySideValidationExceptionComponent>, class ViewT<class StrictEntityContext, class EntityRegistryBase, struct SideBySideCopyComponent const, struct VehicleComponent const>, class EntityModifierT<class EntityRegistryBase, class StrictEntityContext, struct SideBySideValidationExceptionComponent, struct SideBySideExceptionVisitedFlagComponent>, class OptionalGlobalT<struct SideBySideRemappingComponent, class EntityRegistryBase>);

};