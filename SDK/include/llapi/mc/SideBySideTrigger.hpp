// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class SideBySideTrigger {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SIDEBYSIDETRIGGER
public:
    class SideBySideTrigger& operator=(class SideBySideTrigger const &) = delete;
    SideBySideTrigger(class SideBySideTrigger const &) = delete;
    SideBySideTrigger() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SIDEBYSIDETRIGGER
#endif
    MCAPI static void flagUnsupportedComparisonFrame(class Actor &, class std::basic_string_view<char, struct std::char_traits<char>>, struct SideBySidePartialComparison *);
    MCAPI static bool shouldSimulateLegacy(struct IActorMovementProxy const &, enum SideBySideExtractionId);
    MCAPI static bool shouldSimulateLegacy(class Actor const &, enum SideBySideExtractionId);
    MCAPI static void storeCurrentSideBySideResult(class Actor &, struct SideBySideResult);
    MCAPI static void storeSideBySideResult(struct IActorMovementProxy &, enum SideBySideExtractionId, struct SideBySideResult);
    MCAPI static void storeSideBySideResult(class Actor &, enum SideBySideExtractionId, struct SideBySideResult);
    MCAPI static bool tryTrigger(struct IActorMovementProxy &, enum SideBySideExtractionId, enum SideBySideExtractionStep);
    MCAPI static bool tryTrigger(class Actor &, enum SideBySideExtractionId, enum SideBySideExtractionStep);
    MCAPI static bool tryTriggerCurrentPostSimulation(struct IActorMovementProxy &, class std::optional<enum SideBySideExtractionId>);
    MCAPI static bool tryTriggerCurrentPostSimulation(class Actor &, class std::optional<enum SideBySideExtractionId>);

//private:
    MCAPI static void _setGlobalMode(enum SideBySideTrigger::GlobalMode);

private:

};