// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Scripting.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ScriptPluginHandleCounter {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTPLUGINHANDLECOUNTER
public:
    class ScriptPluginHandleCounter& operator=(class ScriptPluginHandleCounter const &) = delete;
    ScriptPluginHandleCounter(class ScriptPluginHandleCounter const &) = delete;
    ScriptPluginHandleCounter() = delete;
#endif

public:
    /*0*/ virtual ~ScriptPluginHandleCounter();
    /*1*/ virtual void onMakeObject(class Scripting::LifetimeRegistry &, struct Scripting::ObjectHandle, class entt::meta_type, unsigned int);
    /*2*/ virtual void onDestroyObject(class Scripting::LifetimeRegistry &, struct Scripting::ObjectHandle, class entt::meta_type, unsigned int);
    /*3*/ virtual void onTrackObject(class Scripting::LifetimeRegistry &, struct Scripting::ObjectHandle, class entt::meta_type, unsigned int);
    /*4*/ virtual void onUntrackObject(class Scripting::LifetimeRegistry &, struct Scripting::ObjectHandle, class entt::meta_type, unsigned int);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTPLUGINHANDLECOUNTER
    MCVAPI void onObjectPromotedToMultipleOwners(class Scripting::LifetimeRegistry &, struct Scripting::ObjectHandle);
    MCVAPI void onObjectReducedToSingleOwner(class Scripting::LifetimeRegistry &, struct Scripting::ObjectHandle);
    MCVAPI void onPostLifetimeScopeDestroy(class Scripting::LifetimeRegistry &);
    MCVAPI void onPreLifetimeScopeDestroy(class Scripting::LifetimeRegistry &);
#endif
    MCAPI ScriptPluginHandleCounter(class ScriptPlugin &);
    MCAPI std::string getName() const;
    MCAPI class ScriptPlugin & getScriptPlugin();

//private:
    MCAPI struct ScriptPluginHandleCounter::TypeStats * _getOrMakeStats(class entt::meta_type);

private:

};