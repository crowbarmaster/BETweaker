// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ItemDescriptor.hpp"
#include "Json.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

struct MolangDescriptor {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOLANGDESCRIPTOR
public:
    struct MolangDescriptor& operator=(struct MolangDescriptor const &) = delete;
    MolangDescriptor(struct MolangDescriptor const &) = delete;
    MolangDescriptor() = delete;
#endif
public:
    /*0*/ virtual std::unique_ptr<struct ItemDescriptor::BaseDescriptor> clone() const;
    /*1*/ virtual bool sameItems(struct ItemDescriptor::BaseDescriptor const &, bool) const;
    /*2*/ virtual bool sameItem(struct ItemDescriptor::ItemEntry const &, bool) const;
    /*3*/ virtual std::string const & getFullName() const;
    /*6*/ virtual class std::map<std::string, std::string, struct std::less<std::string>, class std::allocator<struct std::pair<std::string const, std::string>>> toMap() const;
    /*7*/ virtual class std::optional<class CompoundTag> save() const;
    /*8*/ virtual void serialize(class Json::Value &) const;
    /*9*/ virtual void serialize(class BinaryStream &) const;
    /*10*/ virtual enum ItemDescriptor::InternalType getType() const;
    /*12*/ virtual unsigned __int64 getHash() const;
    /*13*/ virtual void __unk_vfn_13();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MOLANGDESCRIPTOR
#endif
    MCAPI static std::unique_ptr<struct MolangDescriptor> fromExpressionTag(std::string const &, enum MolangVersion);

};