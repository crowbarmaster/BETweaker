// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class BackgroundTask {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BACKGROUNDTASK
public:
    class BackgroundTask& operator=(class BackgroundTask const &) = delete;
    BackgroundTask(class BackgroundTask const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_BACKGROUNDTASK
#endif
    MCAPI BackgroundTask(class BackgroundTask &&);
    MCAPI BackgroundTask(class std::shared_ptr<class TaskGroupImpl>, class std::function<bool (void)>, class gsl::basic_string_span<char const, -1>, class Color const &, class std::function<void (void)>, unsigned int, int);
    MCAPI BackgroundTask();
    MCAPI class BackgroundTask & operator=(class BackgroundTask &&);
    MCAPI ~BackgroundTask();
    MCAPI static class BackgroundTask makeInternal(class std::function<bool (void)>);
    MCAPI static void queueChild(class gsl::basic_string_span<char const, -1>, class Color const &, class std::function<bool (void)>, class std::function<void (void)>, unsigned int, int);

//private:

private:
    MCAPI static class std::shared_ptr<class TaskGroupImpl> mInternalTaskState;

};