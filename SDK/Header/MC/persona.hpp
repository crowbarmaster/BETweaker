// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

namespace persona {

#define AFTER_EXTRA
// Add Member There
	enum class AnimationExpression {
		Linear = 0,
		Blinking = 1
	};
	enum class AnimatedTextureType {
		none = 0,
		face = 1,
		animation_frames_32x32 = 2,
		animation_frames_128x128 = 3
	};

	enum class PieceType {
		Unknown = 0,
		Skeleton = 1,
		Body = 2,
		Skin = 3,
		Bottom = 4,
		Feet = 5,
		Dress = 6,
		Top = 7,
		HighPants = 8,
		Hands = 9,
		Outerwear = 10,
		Back = 11,
		FacialHair = 12,
		Mouth = 13,
		Eyes = 14,
		Hair = 15,
		FaceAccessory = 16,
		Head = 17,
		Legs = 18,
		LeftLeg = 19,
		RightLeg = 20,
		Arms = 21,
		LeftArm = 22,
		RightArm = 23,
		Capes = 24,
		ClassicSkin = 25
	};

#undef AFTER_EXTRA
    MCAPI extern std::string const ANIMATED_128X128_NAME;
    MCAPI extern std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_FIRST_PERSON;
    MCAPI extern std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_THIRD_PERSON;
    MCAPI extern class HashedString const ANIMATED_128X128_TEXTURE_FRAMES_VARIABLE;
    MCAPI extern std::string const ANIMATED_32X32_NAME;
    MCAPI extern std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_FIRST_PERSON;
    MCAPI extern std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_THIRD_PERSON;
    MCAPI extern class HashedString const ANIMATED_32X32_TEXTURE_FRAMES_VARIABLE;
    MCAPI extern std::string const ANIMATED_FACE_CONTROLLER_FIRST_PERSON;
    MCAPI extern std::string const ANIMATED_FACE_CONTROLLER_THIRD_PERSON;
    MCAPI extern std::string const ANIMATED_FACE_NAME;
    MCAPI extern class HashedString const ANIMATED_FACE_TEXTURE_FRAMES_VARIABLE;
    MCAPI extern int const INVALID_INDEX;
    MCAPI extern class mce::UUID const NONE_PIECE_ID;
    MCAPI extern std::string const NONE_PIECE_PATH;
    MCAPI extern class mce::UUID const NO_PIECE_SELECTED;
    MCAPI extern class HashedString const USE_BLINKING_ANIMATION_VARIABLE;
    MCAPI enum persona::PieceType pieceTypeFromString(std::string const &);
    MCAPI std::string const & stringFromPieceType(enum persona::PieceType, bool);

};