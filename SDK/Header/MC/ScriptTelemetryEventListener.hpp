// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class ScriptTelemetryEventListener {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTTELEMETRYEVENTLISTENER
public:
    class ScriptTelemetryEventListener& operator=(class ScriptTelemetryEventListener const &) = delete;
    ScriptTelemetryEventListener(class ScriptTelemetryEventListener const &) = delete;
    ScriptTelemetryEventListener() = delete;
#endif

public:
    /*0*/ virtual ~ScriptTelemetryEventListener();
    /*1*/ virtual enum EventResult onScriptGetComponent(std::string const &, enum RegistrationType, bool);
    /*2*/ virtual enum EventResult onScriptListenForEvent(std::string const &);
    /*3*/ virtual enum EventResult onScriptBroadcastEvent(std::string const &, enum RegistrationType, bool);
    /*4*/ virtual enum EventResult onScriptRegisterView();
    /*5*/ virtual enum EventResult onScriptRegisterSpatialView(std::string const &);
    /*6*/ virtual enum EventResult onScriptAddFilterToView(std::string const &);
    /*7*/ virtual enum EventResult onScriptLoaded(std::string const &, unsigned __int64);
    /*8*/ virtual enum EventResult onScriptRan(std::string const &, std::string const &, bool);
    /*9*/ virtual enum EventResult onScriptError(std::string const &, std::string const &);
    /*10*/ virtual enum EventResult onScriptInternalError(std::string const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTTELEMETRYEVENTLISTENER
#endif

};