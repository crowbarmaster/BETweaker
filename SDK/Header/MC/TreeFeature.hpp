// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class TreeFeature {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TREEFEATURE
public:
    class TreeFeature& operator=(class TreeFeature const &) = delete;
    TreeFeature(class TreeFeature const &) = delete;
    TreeFeature() = delete;
#endif

public:
    /*0*/ virtual ~TreeFeature();
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual void __unk_vfn_2();
    /*3*/ virtual void __unk_vfn_3();
    /*4*/ virtual bool place(class BlockSource &, class BlockPos const &, class Random &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_TREEFEATURE
#endif
    MCAPI bool place(class BlockSource &, class BlockPos const &, class Random &, int) const;

//protected:
    MCAPI void _placeLeaf(class BlockSource &, class BlockPos const &) const;
    MCAPI bool _placeTrunk(class BlockSource &, class BlockPos const &, class Random &, int) const;
    MCAPI bool _prepareSpawn(class BlockSource &, class BlockPos const &, int) const;

//private:
    MCAPI void _addCocoaPlants(class BlockSource &, class BlockPos const &, class Random &, int) const;
    MCAPI void _addJungleFeatures(class BlockSource &, class BlockPos const &, class Random &) const;
    MCAPI void _addVine(class BlockSource &, class BlockPos const &, int) const;
    MCAPI void _placeFallenTrunk(class BlockSource &, class BlockPos const &, class Random &, int) const;

protected:

private:

};