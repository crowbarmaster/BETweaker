// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "persona.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
#include "AnimatedImageData.hpp"
#include "SerializedPersonaPieceHandle.hpp"
#include "SemVersion.hpp"
static_assert(sizeof(SemVersion) == 0x70);
class TintMapColor {
	std::array<mce::Color, 4> mColors;
};

static_assert(sizeof(TintMapColor) == 0x40);

#undef BEFORE_EXTRA

class SerializedSkin {

#define AFTER_EXTRA
// Add Member There
public:
	enum class TrustedSkinFlag : int8_t {
		UNSET = 0,
		NO = 1,
		YES = 2
	};

	std::string mId, mplayFabId, mFullId, mResourcePatch, mDefaultGeometryName;
	mce::Image mSkinImage, mCapeImage;
	std::vector<AnimatedImageData> mSkinAnimatedImages;
	Json::Value mGeometryData;
	SemVersion mGeometryDataEngineVersion;
	Json::Value	mGeometryDataMutable;
	std::string mAnimationData, mCapeId;
	std::vector<SerializedPersonaPieceHandle> mPersonaPieces;
	std::string mArmSize;
	std::unordered_map<persona::PieceType, TintMapColor> mPieceTintColors;
	mce::Color mSkinColor;
	TrustedSkinFlag mTrustedFlag;
	bool mIsPremium, mIsPersona, mIsPersonaCapeOnClassicSkin, misPrimaryUser;
	
#undef AFTER_EXTRA
public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SERIALIZEDSKIN
#endif
    MCAPI SerializedSkin();
    MCAPI SerializedSkin(class SerializedSkin &&);
    MCAPI SerializedSkin(class SerializedSkin const &);
    MCAPI SerializedSkin(class ConnectionRequest const &);
    MCAPI SerializedSkin(class SubClientConnectionRequest const &);
    MCAPI float getAnimationFrames(enum persona::AnimatedTextureType) const;
    MCAPI std::string const & getName() const;
    MCAPI bool isTrustedSkin() const;
    MCAPI class SerializedSkin & operator=(class SerializedSkin const &);
    MCAPI bool read(class ReadOnlyBinaryStream &);
    MCAPI void setIsTrustedSkin(bool);
    MCAPI void updateGeometryName();
    MCAPI bool useBlinkingAnimation() const;
    MCAPI void write(class BinaryStream &) const;
    MCAPI ~SerializedSkin();
    MCAPI static class SerializedSkin createTrustedDefaultSerializedSkin();
    MCAPI static bool isSkinDisabled(class SerializedSkin const &, class LevelData const &);

};