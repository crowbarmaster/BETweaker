// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "SideBySideExtractionId.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

struct OnExtractSideBySide {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ONEXTRACTSIDEBYSIDE
public:
    struct OnExtractSideBySide& operator=(struct OnExtractSideBySide const &) = delete;
    OnExtractSideBySide(struct OnExtractSideBySide const &) = delete;
    OnExtractSideBySide() = delete;
#endif
public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ONEXTRACTSIDEBYSIDE
#endif
    MCAPI static void flagUnsupportedComparisonFrame(class Actor &, class std::basic_string_view<char, struct std::char_traits<char>>, struct SideBySidePartialComparison);
    MCAPI static bool shouldSimulateLegacy(class Actor const &, class std::variant<struct SideBySideExtractionId::TickBegin, struct SideBySideExtractionId::BeginManagePassengers, struct SideBySideExtractionId::ManagePassengersStopRiding, struct SideBySideExtractionId::ManagePassengersPositioning, struct SideBySideExtractionId::EntityInside>);
    MCAPI static void tryTrigger(class Actor &, class std::variant<struct SideBySideExtractionId::TickBegin, struct SideBySideExtractionId::BeginManagePassengers, struct SideBySideExtractionId::ManagePassengersStopRiding, struct SideBySideExtractionId::ManagePassengersPositioning, struct SideBySideExtractionId::EntityInside>, enum SideBySideExtractionStep);
    MCAPI static bool usesEcsMovement(class Actor const &);

};